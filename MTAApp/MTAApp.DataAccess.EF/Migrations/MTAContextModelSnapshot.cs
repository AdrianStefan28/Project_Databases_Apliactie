// <auto-generated />
using System;
using MTAApp.DataAccess.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MTAApp.DataAccess.EF.Migrations
{
    [DbContext(typeof(MTAContext))]
    partial class MTAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MTAApp.DataAccess.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssociationId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApNumber")
                        .HasColumnType("int");

                    b.Property<double?>("ColdWater")
                        .HasColumnType("float");

                    b.Property<double?>("CurrentMonthPayment")
                        .HasColumnType("float");

                    b.Property<double?>("ExtraPayments")
                        .HasColumnType("float");

                    b.Property<double?>("HotWater")
                        .HasColumnType("float");

                    b.Property<int?>("NoPeople")
                        .HasColumnType("int");

                    b.Property<int?>("NoRooms")
                        .HasColumnType("int");

                    b.Property<string>("TenantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalPaymentDebt")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Association", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssociationId")
                        .HasColumnType("int");

                    b.Property<string>("Context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssociationId")
                        .HasColumnType("int");

                    b.Property<double?>("ContractDuration")
                        .HasColumnType("float");

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AssociationId")
                        .HasColumnType("int");

                    b.Property<int?>("CNP")
                        .HasColumnType("int");

                    b.Property<double?>("ContractDuration")
                        .HasColumnType("float");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.PaymentReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AppsPayCurrentMonth")
                        .HasColumnType("float");

                    b.Property<double?>("AppsTotalPayDebt")
                        .HasColumnType("float");

                    b.Property<int>("AssociationId")
                        .HasColumnType("int");

                    b.Property<double?>("ContractsCost")
                        .HasColumnType("float");

                    b.Property<double?>("EmployeesSalary")
                        .HasColumnType("float");

                    b.Property<double?>("Expense")
                        .HasColumnType("float");

                    b.Property<double?>("Income")
                        .HasColumnType("float");

                    b.Property<double?>("OtherPays")
                        .HasColumnType("float");

                    b.Property<double?>("Profit")
                        .HasColumnType("float");

                    b.Property<double?>("RepairingFund")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId")
                        .IsUnique();

                    b.ToTable("PaymentReports");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssociationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Address", b =>
                {
                    b.HasOne("MTAApp.DataAccess.Model.Association", "Association")
                        .WithOne("Address")
                        .HasForeignKey("MTAApp.DataAccess.Model.Address", "AssociationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Association");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Apartment", b =>
                {
                    b.HasOne("MTAApp.DataAccess.Model.User", "User")
                        .WithMany("Apartments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Contact", b =>
                {
                    b.HasOne("MTAApp.DataAccess.Model.Association", "Association")
                        .WithMany("Contacts")
                        .HasForeignKey("AssociationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Association");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Contract", b =>
                {
                    b.HasOne("MTAApp.DataAccess.Model.Association", "Association")
                        .WithMany("Contracts")
                        .HasForeignKey("AssociationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Association");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Employee", b =>
                {
                    b.HasOne("MTAApp.DataAccess.Model.Association", "Association")
                        .WithMany("Empoyees")
                        .HasForeignKey("AssociationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Association");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.PaymentReport", b =>
                {
                    b.HasOne("MTAApp.DataAccess.Model.Association", "Association")
                        .WithOne("PaymentReport")
                        .HasForeignKey("MTAApp.DataAccess.Model.PaymentReport", "AssociationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Association");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Poll", b =>
                {
                    b.HasOne("MTAApp.DataAccess.Model.User", "User")
                        .WithMany("Polls")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.User", b =>
                {
                    b.HasOne("MTAApp.DataAccess.Model.Association", "Association")
                        .WithMany("Users")
                        .HasForeignKey("AssociationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Association");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.Association", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Contacts");

                    b.Navigation("Contracts");

                    b.Navigation("Empoyees");

                    b.Navigation("PaymentReport");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MTAApp.DataAccess.Model.User", b =>
                {
                    b.Navigation("Apartments");

                    b.Navigation("Polls");
                });
#pragma warning restore 612, 618
        }
    }
}
